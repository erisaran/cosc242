#include <stdio.h>
#include <stdlib.h>
#include "bst.j"
#include "mylib.h"

struct bst_node { /* should live in bst.c */
    char *key;
    bst left;
    bst right;
};

int bst_search(bst b, char *key){
    if (b == NULL){
        return 0;
    }else if (strcmp(key,b->key) == 0){
        return 1;
    }else if (strcmp(key,b->key) < 0){
        return bst_search(b->left, key);
    }else if (strcmp(key,b->key) > 0){
        return bst_search(b->right, key);
    }
    return 0;
}

bst bst_insert(bst b, char *key){
    if (b == NULL){
        b = emalloc(sizeof *b);
        b->key = emalloc((strlen(key)) + 1 * sizeof key[0]);
        strcpy(b->key, key);
        return b;
    }else if (strcmp(b->key,key) == 0){
        return b;
    }else if (strcmp(key,b->key) < 0){
        b->left = bst_insert(b->left, key);
        return b;
    }else if (strcmp(key,b->key) > 0){
        b->right = bst_insert(b->right, key);
        return b;
    }
    return b;
    
}

