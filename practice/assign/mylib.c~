/**
   242 Assignment. The mylib file which creates useful functions.
   @authors Ben Dutton, Alexander Dooley, Murdoch Braid.
*/

#include <stdio.h> /* for fprintf */
#include <stdlib.h> /* for size_t, malloc, realloc, exit */
#include <assert.h>
#include <ctype.h>
#include "mylib.h"

/**
   @brief This function allocates memory.
   @params s The size of the object to malloc.
   @return Not used.
 */
void *emalloc(size_t s) {
    void *result = malloc(s);
    if (NULL == result) {
        fprintf(stderr, "memory allocation failed.\n");
        exit(EXIT_FAILURE);
    }
    return result;
}

/**
   @brief This function reallocates memory.
   @params p The pointer that will have its memory size changed.
   @params s The size of the object to malloc.
   @return Not used.
*/
void *erealloc(void *p, size_t s) {
    p = realloc(p,s);
    if (NULL == p) {
        fprintf(stderr, "memory allocation failed.\n");
        exit(EXIT_FAILURE);
    }
    return p;
}

/**
   @brief This function gets words from the specified stream.
   @params s The string that is retrieved for use.
   @params limit The
   @params stream The input stream which is used to read in the words.
   @return EOF If the end of the file is reached.
   @return w-s The string that is retrieved.
 */
int getword(char *s, int limit, FILE *stream) {
    int c;
    char *w = s;
    assert(limit > 0 && s != NULL && stream != NULL);
    /* skip to the start of the word */
    while (!isalnum(c = getc(stream)) && EOF != c)
        ;
    if (EOF == c) {
        return EOF;
    } else if (--limit > 0) { /* reduce limit by 1 to allow for the \0 */
        *w++ = tolower(c);
    }
    while (--limit > 0) {
        if (isalnum(c = getc(stream))) {
            *w++ = tolower(c);
        } else if ('\'' == c) {
            limit++;
        } else {
            break;
        }
    }
    *w = '\0';
    return w - s;
}
